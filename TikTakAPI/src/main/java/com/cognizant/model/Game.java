package com.cognizant.model;

import java.util.Date;
import java.util.List;
import java.util.UUID;
import java.util.ArrayList;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGenerateStrategy;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedTimestamp;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBGeneratedUuid;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIgnore;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.cognizant.Helpers;

@DynamoDBTable(tableName="TikTakTable")
public class Game extends SingleTableModel{
	private String id;

	private String username1;
	private String username2;

	private Date createdTime;
	private Date updatedTime;

	private List<GameMove> gameMoves;

	public Game() {
		super(null, null);
		gameMoves = new ArrayList<GameMove>();
	}

	public Game(String username1, String username2, Date createdTime,
			Date updatedTime, List<GameMove> gameMoves) {
		this();
		// this.id = id;
		this.username1 = username1;
		this.username2 = username2;
		this.createdTime = createdTime;
		this.updatedTime = updatedTime;
		this.gameMoves = gameMoves;
	}
	
	@DynamoDBIgnore
	public String getPkPrefix() {
		return "GAME";
	}
	@DynamoDBIgnore
	public String getSkPrefix() {
		return "METADATA";
	}

	@DynamoDBHashKey(attributeName = "PK")
	public String getPkQuery() {
		return super.getPkQuery();
	}
	public void setPkQuery(String id) {
		super.setPkQuery(id);
	}
	
	@DynamoDBIgnore
	public String getId() {
		return getPk();
	}
	public void setId(String id) {
		setPk(id);
	}

	// Not sure why RangeKey doesnt work but HashKey works
	@DynamoDBHashKey(attributeName = "SK")
	public String getMetadata() {
		return getSkQuery();
	}
	public void setMetadata(String date) {
		setSkQuery(date);
	}

	@DynamoDBAttribute(attributeName = "gameMoves")
	public List<GameMove> getGameMoves() {
		return gameMoves;
	}
	public void setGameMoves(List<GameMove> gameMoves) {
		this.gameMoves = gameMoves;
	}

	@DynamoDBAttribute(attributeName = "username1")
	public String getUsername1() {
		return username1;
	}
	public void setUsername1(String username1) {
		this.username1 = username1;
	}

	@DynamoDBAttribute(attributeName = "username2")
	public String getUsername2() {
		return username2;
	}
	public void setUsername2(String username2) {
		this.username2 = username2;
	}

	@DynamoDBAttribute(attributeName = "createdTime")
    @DynamoDBAutoGeneratedTimestamp(strategy=DynamoDBAutoGenerateStrategy.CREATE)
	public Date getCreatedTime() {
		return createdTime;
	}
	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
		setSk(Helpers.formatDate(createdTime));
	}

	@DynamoDBAttribute(attributeName = "updatedTime")
    @DynamoDBAutoGeneratedTimestamp(strategy=DynamoDBAutoGenerateStrategy.CREATE)
	public Date getUpdatedTime() {
		return updatedTime;
	}
	public void setUpdatedTime(Date updatedTime) {
		this.updatedTime = updatedTime;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Game other = (Game) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Game [id=" + id + ", username1=" + username1 + ", username2=" + username2 + ", createdTime="
				+ createdTime + ", updatedTime=" + updatedTime + ", gameMoves=" + gameMoves + "]";
	}
}