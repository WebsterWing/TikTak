package com.cognizant.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.cognizant.Helpers;

public abstract class SingleTableModel {
	private String pk;
	private String sk;
	
	private int pkPrefixLen;
	private int skPrefixLen;
	
	public SingleTableModel(String pk, String sk) throws IllegalArgumentException {
		String pkPrefix = getPkPrefix();
		String skPrefix = getSkPrefix();

		if (pkPrefix == null) {
			throw new IllegalArgumentException("pkPrefix is null");
		}
		if (skPrefix == null) {
			throw new IllegalArgumentException("skPrefix is null");
		}

		this.pkPrefixLen = pkPrefix.length();
		this.skPrefixLen = skPrefix.length();

		if (pkPrefixLen <= 0) {
			throw new IllegalArgumentException("pkPrefix length is not > 0");
		}
		if (skPrefixLen <= 0) {
			throw new IllegalArgumentException("skPrefix length is not > 0");
		}

		this.pk = pk;
		this.sk = sk;
	}
	
	public abstract String getPkPrefix();
	public abstract String getSkPrefix();
	
	public void clearKeys() {
		pk = null;
		sk = null;
	}

	protected String getPkQuery() {
        return getPkPrefix() + "#" + getPk();
	}
	protected void setPkQuery(String pkQuery) {
		pk = pkQuery.substring(pkPrefixLen + 1);
	}

	protected String getPk() {
		if (pk == null) {
			pk = Helpers.getUUID();
		}
		return pk;
	}
	protected void setPk(String pk) {
		this.pk = pk;
	}

	protected String getSkQuery() {
        return getSkPrefix() + "#" + getSk();
	}
	protected void setSkQuery(String skQuery) {
		sk = skQuery.substring(skPrefixLen + 1);
	}

	protected String getSk() {
		if (sk == null) {
			sk = Helpers.getUUID();
		}
		return sk;
	}
	protected void setSk(String sk) {
		this.sk = sk;
	}
} 
