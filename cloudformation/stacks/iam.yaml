AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation Template for TikTak Keypairs and Users

Parameters:
  DynamoDBPolicyArn:
    Type: String
    Description: TikTak DynamoDB Policy Arn

Resources:
  TikTakBackendRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
              - codedeploy.amazonaws.com
            Action:
              - "sts:AssumeRole"
                # - "autoscaling:Describe*"
                # - "cloudformation:Describe*"
                # - "cloudformation:GetTemplate",

      ManagedPolicyArns:
        - !Ref DynamoDBPolicyArn
        - 'arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy'
        - 'arn:aws:iam::aws:policy/service-role/AutoScalingNotificationAccessRole'

      Tags:
        -
          Key: Name
          Value: TikTakBackendRole

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                # - ec2.amazonaws.com
              - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'

      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess"

      Tags:
        -
          Key: Name
          Value: CodeDeployRole

  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
              - codedeploy.amazonaws.com
            Action:
              - 'sts:AssumeRole'

      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'
          # - 'arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy'
          # - 'arn:aws:iam::aws:policy/service-role/AutoScalingNotificationAccessRole'

      Tags:
        -
          Key: Name
          Value: CodeDeployRole


  CodePipelinePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Policy for CodePipeline Role
      ManagedPolicyName: CodePipelinePolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - iam:PassRole
          Resource: "*"
          Effect: Allow
          Condition:
            StringEqualsIfExists:
              iam:PassedToService:
              - cloudformation.amazonaws.com
              - elasticbeanstalk.amazonaws.com
              - ec2.amazonaws.com
              - ecs-tasks.amazonaws.com
        - Action:
          - codecommit:CancelUploadArchive
          - codecommit:GetBranch
          - codecommit:GetCommit
          - codecommit:GetUploadArchiveStatus
          - codecommit:UploadArchive
          Resource: "*"
          Effect: Allow
        - Action:
          - codedeploy:CreateDeployment
          - codedeploy:GetApplication
          - codedeploy:GetApplicationRevision
          - codedeploy:GetDeployment
          - codedeploy:GetDeploymentConfig
          - codedeploy:RegisterApplicationRevision
          Resource: "*"
          Effect: Allow
        - Action:
          - codestar-connections:UseConnection
          Resource: "*"
          Effect: Allow
        - Action:
          - elasticbeanstalk:*
          - ec2:*
          - elasticloadbalancing:*
          - autoscaling:*
          - cloudwatch:*
          - s3:*
          - sns:*
          - cloudformation:*
          - rds:*
          - sqs:*
          - ecs:*
          Resource: "*"
          Effect: Allow
        - Action:
          - lambda:InvokeFunction
          - lambda:ListFunctions
          Resource: "*"
          Effect: Allow
        - Action:
          - opsworks:CreateDeployment
          - opsworks:DescribeApps
          - opsworks:DescribeCommands
          - opsworks:DescribeDeployments
          - opsworks:DescribeInstances
          - opsworks:DescribeStacks
          - opsworks:UpdateApp
          - opsworks:UpdateStack
          Resource: "*"
          Effect: Allow
        - Action:
          - cloudformation:CreateStack
          - cloudformation:DeleteStack
          - cloudformation:DescribeStacks
          - cloudformation:UpdateStack
          - cloudformation:CreateChangeSet
          - cloudformation:DeleteChangeSet
          - cloudformation:DescribeChangeSet
          - cloudformation:ExecuteChangeSet
          - cloudformation:SetStackPolicy
          - cloudformation:ValidateTemplate
          Resource: "*"
          Effect: Allow
        - Action:
          - codebuild:BatchGetBuilds
          - codebuild:StartBuild
          - codebuild:BatchGetBuildBatches
          - codebuild:StartBuildBatch
          Resource: "*"
          Effect: Allow
        - Effect: Allow
          Action:
          - devicefarm:ListProjects
          - devicefarm:ListDevicePools
          - devicefarm:GetRun
          - devicefarm:GetUpload
          - devicefarm:CreateUpload
          - devicefarm:ScheduleRun
          Resource: "*"
        - Effect: Allow
          Action:
          - servicecatalog:ListProvisioningArtifacts
          - servicecatalog:CreateProvisioningArtifact
          - servicecatalog:DescribeProvisioningArtifact
          - servicecatalog:DeleteProvisioningArtifact
          - servicecatalog:UpdateProduct
          Resource: "*"
        - Effect: Allow
          Action:
          - cloudformation:ValidateTemplate
          Resource: "*"
        - Effect: Allow
          Action:
          - ecr:DescribeImages
          Resource: "*"
        - Effect: Allow
          Action:
          - states:DescribeExecution
          - states:DescribeStateMachine
          - states:StartExecution
          Resource: "*"
        - Effect: Allow
          Action:
          - appconfig:StartDeployment
          - appconfig:StopDeployment
          - appconfig:GetDeployment
          Resource: "*"

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - codepipeline.amazonaws.com
              - cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Ref CodePipelinePolicy

Outputs:
  BackendRoleName:
    Description: TikTak Backend Role Name
    Value: !Ref TikTakBackendRole
  BackendRoleArn:
    Description: TikTak Backend Role Arn
    Value: !GetAtt TikTakBackendRole.Arn

  CodeBuildRoleArn:
    Description: Code Build Role Arn
    Value: !Ref CodeBuildRole

  CodePipelineRoleArn:
    Description: Code Pipeline Role Name
    Value: !GetAtt CodePipelineRole.Arn
      # CodePipelineRoleArn:
      #   Description: Code Pipeline Role Arn
      #   Value: !GetAtt CodePipelineManagedPolicy.Arn

  CodeDeployRoleName:
    Description: Code Deploy Role Name
    Value: !Ref CodeDeployRole
  CodeDeployRoleArn:
    Description: Code Deploy Role Arn
    Value: !GetAtt CodeDeployRole.Arn
